{"version":3,"sources":["panels/Home.js","icons/bronzeBox.svg","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","Panel","PanelHeader","Group","header","Header","mode","Div","Button","stretched","size","onClick","data-to","Persik","props","left","PanelHeaderBack","className","img","bronzeBox","alt","App","useState","activePanel","setActivePanel","setUser","ScreenSpinner","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","View","ReactDOM","render","getElementById"],"mappings":"kSA2DeA,EA/CF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACX,eAACC,EAAA,EAAD,CAAOH,GAAIA,EAAX,UACE,cAACI,EAAA,EAAD,sBACCF,GACC,cAACG,EAAA,EAAD,CACEC,OACE,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAb,gDAYN,cAACH,EAAA,EAAD,CAAOC,OAAQ,cAACC,EAAA,EAAD,CAAQC,KAAK,YAAb,gCAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,KAAK,IACLJ,KAAK,YACLK,QAASZ,EACTa,UAAQ,SALV,gD,QChCO,MAA0B,sCC4B1BC,G,OAlBA,SAACC,GAAD,OACb,eAACb,EAAA,EAAD,CAAOH,GAAIgB,EAAMhB,GAAjB,UACE,cAACI,EAAA,EAAD,CAAaa,KAAM,cAACC,EAAA,EAAD,CAAiBL,QAASG,EAAMf,GAAIa,UAAQ,SAA/D,oBAGA,qBAAKK,UAAU,SAASC,IAAKC,EAAWC,IAAI,mBAC5C,qBAAKH,UAAU,SAASC,IAAKC,EAAWC,IAAI,mBAC5C,qBAAKH,UAAU,SAASC,IAAKC,EAAWC,IAAI,mBAC5C,qBAAKH,UAAU,SAASC,IAAKC,EAAWC,IAAI,mBAC5C,qBAAKH,UAAU,SAASC,IAAKC,EAAWC,IAAI,wBC4BjCC,EArCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEVtB,EAFU,KAEGyB,EAFH,OAGWH,mBAAS,cAACI,EAAA,EAAD,CAAehB,KAAK,WAHxC,mBAGViB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECR,EAAQQ,GACRL,EAAU,MAHX,4CARe,sBACfG,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAM/C,EAAK,SAAAgD,GACVvB,EAAeuB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,cAAC,IAAD,UACC,cAAC,IAAD,UACC,eAACC,EAAA,EAAD,CAAM5B,YAAaA,EAAaI,OAAQA,EAAxC,UACC,cAAC,EAAD,CAAM7B,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,YClC7BgC,IAAOC,KAAK,gBAEZoB,IAASC,OAAO,cAAC,EAAD,IAASd,SAASe,eAAe,W","file":"static/js/main.9ae77d44.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Header from \"@vkontakte/vkui/dist/components/Header/Header\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\n// import Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport Avatar from \"@vkontakte/vkui/dist/components/Avatar/Avatar\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>Example</PanelHeader>\n    {fetchedUser && (\n      <Group\n        header={\n          <Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>\n        }\n      >\n        {/* <Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell> */}\n      </Group>\n    )}\n\n    <Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n      <Div>\n        <Button\n          stretched\n          size=\"l\"\n          mode=\"secondary\"\n          onClick={go}\n          data-to=\"persik\"\n        >\n          Show me the Persik, please\n        </Button>\n      </Div>\n    </Group>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/bronzeBox.d584b6de.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\n\nimport bronzeBox from \"../icons/bronzeBox.svg\";\nimport \"./Persik.css\";\n\nconst Persik = (props) => (\n  <Panel id={props.id}>\n    <PanelHeader left={<PanelHeaderBack onClick={props.go} data-to=\"home\" />}>\n      Persik\n    </PanelHeader>\n    <img className=\"Persik\" img={bronzeBox} alt=\"Persik The Cat\" />\n    <img className=\"Persik\" img={bronzeBox} alt=\"Persik The Cat\" />\n    <img className=\"Persik\" img={bronzeBox} alt=\"Persik The Cat\" />\n    <img className=\"Persik\" img={bronzeBox} alt=\"Persik The Cat\" />\n    <img className=\"Persik\" img={bronzeBox} alt=\"Persik The Cat\" />\n  </Panel>\n);\n\nPersik.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport { AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}